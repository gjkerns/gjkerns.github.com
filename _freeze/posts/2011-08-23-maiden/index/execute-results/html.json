{
  "hash": "e6ab0d4513c62400c7d477d9b35da9c9",
  "result": {
    "markdown": "---\ntitle: \"Maiden Voyage\"\ndescription: \"This is the first post. A mission statement, of sorts.\"\ndate: \"2011-08-23\"\ncategories: [news, rstats]\nimage: \"skiddaw.png\"\n---\n\n\n## Who\n\n[Me](https://gkerns.people.ysu.edu/). I'm an associate professor of Statistics at [Youngstown State University](https://ysu.edu/) in [Youngstown, Ohio, USA](http://en.wikipedia.org/wiki/Youngstown,_Ohio). I've been using [R](http://www.r-project.org/) for about 7 years, [Emacs](http://www.gnu.org/software/emacs/) about 3 years, [git](http://git-scm.com/) about 1 year, and [Org-Mode](http://orgmode.org/) for less than a year.\n\n## What\n\nI want this blog to be about statistics, plain and sample. No frills, no tomfoolery, just bare-boned statistics from beginning to end. Plus Emacs, ESS, Org-Mode, and R, but that goes without saying.\n\n## When\n\nI've wanted to do this for a long time, but had as of yet convinced myself that I didn't have time for it. A sabbatical coupled with the renewed energy of a [use R! conference](http://www.warwick.ac.uk/statsdept/user-2011/) can change things considerably.\n\n## How: Emacs + Org mode + Jekyll + Github = Blog + R!\n\nAfter much fiddling and googling I have managed to figure out how to run a blog entirely through Emacs and Git. If you'd like to do the same I recommend reading [here](http://orgmode.org/worg/org-tutorials/org-jekyll.html) and [here](http://vitobotta.com/how-to-migrate-from-wordpress-to-jekyll/), with liberal doses of [this](http://blog.envylabs.com/2009/08/publishing-a-blog-with-github-pages-and-jekyll/) and [that](https://github.com/mojombo/jekyll). Ultimately, if you'd like to know how I do it then you can find the org-mode source code for this blog [here](https://github.com/gjkerns/blog) and you can download the final result [here](https://github.com/gjkerns/gjkerns.github.com) (which still is source code but is as close to final as possible).\n\nThe bottom line: with this setup I can effortlessly do R code like this:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrnorm(10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] -1.26005550 -0.24153330 -0.26270810  0.11929914 -0.05094026 -0.54149791\n [7]  0.51524809 -0.90041545  0.52012774 -0.23936052\n```\n:::\n:::\n\n\nAnd can include plots like this:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx = rnorm(100) \ny = rnorm(100)\nplot(y ~ x)\n```\n\n::: {.cell-output-display}\n![A plot to get things started.](index_files/figure-html/fig-skiddaw-1.png){#fig-skiddaw width=672}\n:::\n:::\n\n\nall housed inside a simple, dynamic text file that I can edit with [Emacs](http://www.gnu.org/software/emacs/) and can version-control with [git](http://git-scm.com/). On top of all this, I get LaTeX formatting in HTML via [MathJax](http://www.mathjax.org/). Life is good.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}