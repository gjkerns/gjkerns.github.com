{
  "hash": "4fab80af67263511647aea1492f85947",
  "result": {
    "markdown": "---\ntitle: \"MathFest Scheduling with Integer Programming\"\ndescription: \"A case study.\"\ndate: \"2024-03-08\"\ncategories: [operations research]\nimage: preview.jpg\ntwitter-card: \n  image: preview.jpg\ndraft: true\n---\n\n\n![The Queen of Hearts. Source: [favpng.com](https://img.favpng.com/4/10/10/queen-of-hearts-playing-card-stock-photography-png-favpng-iXdcRx6K22ngYDUxhZ7DaSYfu.jpg)](preview.jpg \"The Queen of Hearts\"){.preview-image}\n\n# The setup\n\n# The problem\n\n\nYou can also embed plots, for example:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(plotly)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: ggplot2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'plotly'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:stats':\n\n    filter\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:graphics':\n\n    layout\n```\n:::\n\n```{.r .cell-code}\nmtcars$am[which(mtcars$am == 0)] <- 'Automatic'\nmtcars$am[which(mtcars$am == 1)] <- 'Manual'\nmtcars$am <- as.factor(mtcars$am)\nfig <- plot_ly(mtcars, x = ~wt, y = ~hp, z = ~qsec, color = ~am, colors = c('#BF382A', '#0C4B8E'))\nfig <- fig %>% add_markers()\nfig <- fig %>% layout(scene = list(xaxis = list(title = 'Weight'),\n                                   yaxis = list(title = 'Gross horsepower'),\n                                   zaxis = list(title = '1/4 mile time')))\nfig\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"plotly html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-33d173c91a92a4b1dc50\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-33d173c91a92a4b1dc50\">{\"x\":{\"visdat\":{\"2cfc13ae65\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"2cfc13ae65\",\"attrs\":{\"2cfc13ae65\":{\"x\":{},\"y\":{},\"z\":{},\"color\":{},\"colors\":[\"#BF382A\",\"#0C4B8E\"],\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatter3d\",\"mode\":\"markers\",\"inherit\":true}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"scene\":{\"xaxis\":{\"title\":\"Weight\"},\"yaxis\":{\"title\":\"Gross horsepower\"},\"zaxis\":{\"title\":\"1/4 mile time\"}},\"hovermode\":\"closest\",\"showlegend\":true},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[3.215,3.44,3.46,3.57,3.19,3.15,3.44,3.44,4.07,3.73,3.78,5.25,5.424,5.345,2.465,3.52,3.435,3.84,3.845],\"y\":[110,175,105,245,62,95,123,123,180,180,180,205,215,230,97,150,150,245,175],\"z\":[19.44,17.02,20.22,15.84,20,22.9,18.3,18.9,17.4,17.6,18,17.98,17.82,17.42,20.01,16.87,17.3,15.41,17.05],\"type\":\"scatter3d\",\"mode\":\"markers\",\"name\":\"Automatic\",\"marker\":{\"color\":\"rgba(191,56,42,1)\",\"line\":{\"color\":\"rgba(191,56,42,1)\"}},\"textfont\":{\"color\":\"rgba(191,56,42,1)\"},\"error_y\":{\"color\":\"rgba(191,56,42,1)\"},\"error_x\":{\"color\":\"rgba(191,56,42,1)\"},\"line\":{\"color\":\"rgba(191,56,42,1)\"},\"frame\":null},{\"x\":[2.62,2.875,2.32,2.2,1.615,1.835,1.935,2.14,1.513,3.17,2.77,3.57,2.78],\"y\":[110,110,93,66,52,65,66,91,113,264,175,335,109],\"z\":[16.46,17.02,18.61,19.47,18.52,19.9,18.9,16.7,16.9,14.5,15.5,14.6,18.6],\"type\":\"scatter3d\",\"mode\":\"markers\",\"name\":\"Manual\",\"marker\":{\"color\":\"rgba(12,75,142,1)\",\"line\":{\"color\":\"rgba(12,75,142,1)\"}},\"textfont\":{\"color\":\"rgba(12,75,142,1)\"},\"error_y\":{\"color\":\"rgba(12,75,142,1)\"},\"error_x\":{\"color\":\"rgba(12,75,142,1)\"},\"line\":{\"color\":\"rgba(12,75,142,1)\"},\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.2,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\nNote that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.\n\n# Early solutions\n\nThe first early solution to the problem was... do it by hand.  I can only imagine what a nightmare that would have been trying to schedule 300 students in workshops that they wanted to see.\n\n# The program\n\nHere are the steps of the program.\n\n1. Go sequentially by student.\n2. Check their 1st ranked workshop. If there is still room in Workshop I, then assign the student there.\n3. If there is no room in Workshop I, then check Workshop II.  If there is still room, then assign the student there.\n4. If both Workshop I and II are full in their 1st choice, then go to their 2nd ranked workshop and start over.\n5. Continue in this fashion until \n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/htmlwidgets-1.6.2/htmlwidgets.js\"></script>\r\n<script src=\"../../site_libs/plotly-binding-4.10.1/plotly.js\"></script>\r\n<script src=\"../../site_libs/typedarray-0.1/typedarray.min.js\"></script>\r\n<script src=\"../../site_libs/jquery-3.5.1/jquery.min.js\"></script>\r\n<link href=\"../../site_libs/crosstalk-1.2.0/css/crosstalk.min.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/crosstalk-1.2.0/js/crosstalk.min.js\"></script>\r\n<link href=\"../../site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}